global using Microsoft.Extensions.Logging;
global using FluentAssertions;
global using MediatR;
global using Microsoft.AspNetCore.Http;
global using Moq;
global using FluentValidation.TestHelper;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Customers.CreateCustomer;
global using Microsoft.EntityFrameworkCore;
global using TunNetCom.SilkRoadErp.Sales.Domain.Entites;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Customers.GetCustomer;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Customers.DeleteCustomer;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Products.CreateProduct;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Products.GetProductByRef;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Products.GetProduct;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Products.UpdateProduct;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Products.DeleteProduct;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Providers.CreateProvider;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Providers.DeleteProvider;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Providers.UpdateProvider;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Providers.GetProvider;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.Providers.GetProviderById;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.ReceiptNote.GetReceiptNote;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.ReceiptNote.GetReceiptNoteById;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.ReceiptNote.UpdateReceiptNote;
global using TunNetCom.SilkRoadErp.Sales.Api.Features.ReceiptNote.DeleteReceiptNote;
global using FluentResults;
global using Microsoft.AspNetCore.Http.HttpResults;
