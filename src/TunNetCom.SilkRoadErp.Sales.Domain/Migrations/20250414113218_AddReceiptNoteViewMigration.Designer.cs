// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TunNetCom.SilkRoadErp.Sales.Domain.Entites;

#nullable disable

namespace TunNetCom.SilkRoadErp.Sales.Domain.Migrations
{
    [DbContext(typeof(SalesContext))]
    [Migration("20250414113218_AddReceiptNoteViewMigration")]
    partial class AddReceiptNoteViewMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.AvoirFinancierFournisseurs", b =>
                {
                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumSurPage")
                        .HasColumnType("int");

                    b.Property<decimal>("TotTtc")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_ttc");

                    b.HasKey("Num")
                        .HasName("PK_dbo.AvoirFinancierFournisseurs");

                    b.ToTable("AvoirFinancierFournisseurs");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.AvoirFournisseur", b =>
                {
                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int?>("FournisseurId")
                        .HasColumnType("int")
                        .HasColumnName("fournisseurId");

                    b.Property<int>("NumAvoirFournisseur")
                        .HasColumnType("int")
                        .HasColumnName("Num_AvoirFournisseur");

                    b.Property<int?>("NumFactureAvoirFournisseur")
                        .HasColumnType("int")
                        .HasColumnName("Num_FactureAvoirFournisseur");

                    b.HasKey("Num")
                        .HasName("PK_dbo.AvoirFournisseur");

                    b.HasIndex("FournisseurId");

                    b.HasIndex("NumFactureAvoirFournisseur");

                    b.ToTable("AvoirFournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Avoirs", b =>
                {
                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("clientId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.HasKey("Num")
                        .HasName("PK_dbo.Avoirs");

                    b.HasIndex("ClientId");

                    b.ToTable("Avoirs");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.BonDeLivraison", b =>
                {
                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("clientId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<decimal>("NetPayer")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("net_payer");

                    b.Property<int?>("NumFacture")
                        .HasColumnType("int")
                        .HasColumnName("Num_Facture");

                    b.Property<TimeOnly>("TempBl")
                        .HasColumnType("time")
                        .HasColumnName("temp_bl");

                    b.Property<decimal>("TotHTva")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_H_tva");

                    b.Property<decimal>("TotTva")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_tva");

                    b.HasKey("Num")
                        .HasName("PK_dbo.BonDeLivraison");

                    b.HasIndex("ClientId");

                    b.HasIndex("NumFacture");

                    b.ToTable("BonDeLivraison");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.BonDeReception", b =>
                {
                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<DateTime>("DateLivraison")
                        .HasColumnType("datetime")
                        .HasColumnName("date_livraison");

                    b.Property<int>("IdFournisseur")
                        .HasColumnType("int")
                        .HasColumnName("id_fournisseur");

                    b.Property<long>("NumBonFournisseur")
                        .HasColumnType("bigint")
                        .HasColumnName("Num_Bon_fournisseur");

                    b.Property<int?>("NumFactureFournisseur")
                        .HasColumnType("int")
                        .HasColumnName("Num_Facture_fournisseur");

                    b.HasKey("Num")
                        .HasName("PK_dbo.BonDeReception");

                    b.HasIndex("IdFournisseur");

                    b.HasIndex("NumFactureFournisseur");

                    b.ToTable("BonDeReception");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("adresse");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<string>("CodeCat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code_cat");

                    b.Property<string>("EtbSec")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("etb_sec");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mail");

                    b.Property<string>("Matricule")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("matricule");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Tel")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tel");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Client");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Commandes", b =>
                {
                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int?>("FournisseurId")
                        .HasColumnType("int")
                        .HasColumnName("fournisseurId");

                    b.HasKey("Num")
                        .HasName("PK_dbo.Commandes");

                    b.HasIndex("FournisseurId");

                    b.ToTable("Commandes");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Devis", b =>
                {
                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("id_client");

                    b.Property<decimal>("TotHTva")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_H_tva");

                    b.Property<decimal>("TotTtc")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_ttc");

                    b.Property<decimal>("TotTva")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_tva");

                    b.HasKey("Num")
                        .HasName("PK_dbo.Devis");

                    b.HasIndex("IdClient");

                    b.ToTable("Devis");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.EcheanceDesFournisseurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateEcheance")
                        .HasColumnType("datetime")
                        .HasColumnName("dateEcheance");

                    b.Property<int>("FournisseurId")
                        .HasColumnType("int")
                        .HasColumnName("fournisseur_id");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("montant");

                    b.Property<long>("NumCheque")
                        .HasColumnType("bigint")
                        .HasColumnName("numCheque");

                    b.HasKey("Id")
                        .HasName("PK_dbo.EcheanceDesFournisseurs");

                    b.HasIndex("FournisseurId");

                    b.ToTable("EcheanceDesFournisseurs");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Facture", b =>
                {
                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("IdClient")
                        .HasColumnType("int")
                        .HasColumnName("id_client");

                    b.HasKey("Num")
                        .HasName("PK_dbo.Facture");

                    b.HasIndex("IdClient");

                    b.ToTable("Facture");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.FactureAvoirFournisseur", b =>
                {
                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<int>("IdFournisseur")
                        .HasColumnType("int")
                        .HasColumnName("id_fournisseur");

                    b.Property<int>("NumFactureAvoirFourSurPage")
                        .HasColumnType("int")
                        .HasColumnName("Num_FactureAvoirFourSurPAge");

                    b.Property<int?>("NumFactureFournisseur")
                        .HasColumnType("int")
                        .HasColumnName("Num_FactureFournisseur");

                    b.HasKey("Num")
                        .HasName("PK_dbo.FactureAvoirFournisseur");

                    b.HasIndex("IdFournisseur");

                    b.HasIndex("NumFactureFournisseur");

                    b.ToTable("FactureAvoirFournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.FactureFournisseur", b =>
                {
                    b.Property<int>("Num")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Num"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<DateTime>("DateFacturationFournisseur")
                        .HasColumnType("datetime")
                        .HasColumnName("dateFacturationFournisseur");

                    b.Property<int>("IdFournisseur")
                        .HasColumnType("int")
                        .HasColumnName("id_fournisseur");

                    b.Property<long>("NumFactureFournisseur")
                        .HasColumnType("bigint");

                    b.Property<bool>("Paye")
                        .HasColumnType("bit")
                        .HasColumnName("paye");

                    b.HasKey("Num")
                        .HasName("PK_dbo.FactureFournisseur");

                    b.HasIndex("IdFournisseur");

                    b.ToTable("FactureFournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Fournisseur", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adresse");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code");

                    b.Property<string>("CodeCat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("code_cat");

                    b.Property<bool>("Constructeur")
                        .HasColumnType("bit")
                        .HasColumnName("constructeur");

                    b.Property<string>("EtbSec")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("etb_sec");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fax");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mail");

                    b.Property<string>("MailDeux")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("mail_deux");

                    b.Property<string>("Matricule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("matricule");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nom");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tel");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Fournisseur");

                    b.ToTable("Fournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneAvoirFournisseur", b =>
                {
                    b.Property<int>("IdLi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_li");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLi"));

                    b.Property<string>("DesignationLi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("designation_li");

                    b.Property<int>("NumAvoirFr")
                        .HasColumnType("int")
                        .HasColumnName("Num_AvoirFr");

                    b.Property<decimal>("PrixHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("prix_HT");

                    b.Property<int>("QteLi")
                        .HasColumnType("int")
                        .HasColumnName("qte_li");

                    b.Property<string>("RefProduit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ref_Produit");

                    b.Property<double>("Remise")
                        .HasColumnType("float")
                        .HasColumnName("remise");

                    b.Property<decimal>("TotHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_HT");

                    b.Property<decimal>("TotTtc")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_TTC");

                    b.Property<double>("Tva")
                        .HasColumnType("float")
                        .HasColumnName("tva");

                    b.HasKey("IdLi")
                        .HasName("PK_dbo.LigneAvoirFournisseur");

                    b.HasIndex("NumAvoirFr");

                    b.HasIndex("RefProduit");

                    b.ToTable("LigneAvoirFournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneAvoirs", b =>
                {
                    b.Property<int>("IdLi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_li");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLi"));

                    b.Property<string>("DesignationLi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("designation_li");

                    b.Property<int>("NumAvoir")
                        .HasColumnType("int")
                        .HasColumnName("Num_avoir");

                    b.Property<decimal>("PrixHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("prix_HT");

                    b.Property<int>("QteLi")
                        .HasColumnType("int")
                        .HasColumnName("qte_li");

                    b.Property<string>("RefProduit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ref_Produit");

                    b.Property<double>("Remise")
                        .HasColumnType("float")
                        .HasColumnName("remise");

                    b.Property<decimal>("TotHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_HT");

                    b.Property<decimal>("TotTtc")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_TTC");

                    b.Property<double>("Tva")
                        .HasColumnType("float")
                        .HasColumnName("tva");

                    b.HasKey("IdLi")
                        .HasName("PK_dbo.LigneAvoirs");

                    b.HasIndex("NumAvoir");

                    b.HasIndex("RefProduit");

                    b.ToTable("LigneAvoirs");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneBl", b =>
                {
                    b.Property<int>("IdLi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_li");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLi"));

                    b.Property<string>("DesignationLi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("designation_li");

                    b.Property<int>("NumBl")
                        .HasColumnType("int")
                        .HasColumnName("Num_BL");

                    b.Property<decimal>("PrixHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("prix_HT");

                    b.Property<int>("QteLi")
                        .HasColumnType("int")
                        .HasColumnName("qte_li");

                    b.Property<string>("RefProduit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ref_Produit");

                    b.Property<double>("Remise")
                        .HasColumnType("float")
                        .HasColumnName("remise");

                    b.Property<decimal>("TotHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_HT");

                    b.Property<decimal>("TotTtc")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_TTC");

                    b.Property<double>("Tva")
                        .HasColumnType("float")
                        .HasColumnName("tva");

                    b.HasKey("IdLi")
                        .HasName("PK_dbo.LigneBL");

                    b.HasIndex("NumBl");

                    b.HasIndex("RefProduit");

                    b.ToTable("LigneBL", (string)null);
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneBonReception", b =>
                {
                    b.Property<int>("IdLigne")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_ligne");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLigne"));

                    b.Property<string>("DesignationLi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("designation_li");

                    b.Property<int>("NumBonRec")
                        .HasColumnType("int")
                        .HasColumnName("Num_BonRec");

                    b.Property<decimal>("PrixHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("prix_HT");

                    b.Property<int>("QteLi")
                        .HasColumnType("int")
                        .HasColumnName("qte_li");

                    b.Property<string>("RefProduit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ref_Produit");

                    b.Property<double>("Remise")
                        .HasColumnType("float")
                        .HasColumnName("remise");

                    b.Property<decimal>("TotHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_HT");

                    b.Property<decimal>("TotTtc")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_TTC");

                    b.Property<double>("Tva")
                        .HasColumnType("float")
                        .HasColumnName("tva");

                    b.HasKey("IdLigne")
                        .HasName("PK_dbo.LigneBonReception");

                    b.HasIndex("NumBonRec");

                    b.HasIndex("RefProduit");

                    b.ToTable("LigneBonReception");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneCommandes", b =>
                {
                    b.Property<int>("IdLi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_li");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLi"));

                    b.Property<string>("DesignationLi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("designation_li");

                    b.Property<int>("NumCommande")
                        .HasColumnType("int")
                        .HasColumnName("Num_commande");

                    b.Property<decimal>("PrixHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("prix_HT");

                    b.Property<int>("QteLi")
                        .HasColumnType("int")
                        .HasColumnName("qte_li");

                    b.Property<string>("RefProduit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ref_Produit");

                    b.Property<double>("Remise")
                        .HasColumnType("float")
                        .HasColumnName("remise");

                    b.Property<decimal>("TotHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_HT");

                    b.Property<decimal>("TotTtc")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_TTC");

                    b.Property<double>("Tva")
                        .HasColumnType("float")
                        .HasColumnName("tva");

                    b.HasKey("IdLi")
                        .HasName("PK_dbo.LigneCommandes");

                    b.HasIndex("NumCommande");

                    b.HasIndex("RefProduit");

                    b.ToTable("LigneCommandes");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneDevis", b =>
                {
                    b.Property<int>("IdLi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id_li");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLi"));

                    b.Property<string>("DesignationLi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Designation_li");

                    b.Property<int>("NumDevis")
                        .HasColumnType("int")
                        .HasColumnName("Num_devis");

                    b.Property<decimal>("PrixHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("prix_HT");

                    b.Property<int>("QteLi")
                        .HasColumnType("int")
                        .HasColumnName("qte_li");

                    b.Property<string>("RefProduit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Ref_produit");

                    b.Property<double>("Remise")
                        .HasColumnType("float")
                        .HasColumnName("remise");

                    b.Property<decimal>("TotHt")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_HT");

                    b.Property<decimal>("TotTtc")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tot_TTC");

                    b.Property<double>("Tva")
                        .HasColumnType("float")
                        .HasColumnName("tva");

                    b.HasKey("IdLi")
                        .HasName("PK_dbo.LigneDevis");

                    b.HasIndex("NumDevis");

                    b.HasIndex("RefProduit");

                    b.ToTable("LigneDevis");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Produit", b =>
                {
                    b.Property<string>("Refe")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("refe");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nom");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("prix");

                    b.Property<decimal>("PrixAchat")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("prixAchat");

                    b.Property<int>("Qte")
                        .HasColumnType("int")
                        .HasColumnName("qte");

                    b.Property<int>("QteLimite")
                        .HasColumnType("int")
                        .HasColumnName("qteLimite");

                    b.Property<double>("Remise")
                        .HasColumnType("float")
                        .HasColumnName("remise");

                    b.Property<double>("RemiseAchat")
                        .HasColumnType("float")
                        .HasColumnName("remiseAchat");

                    b.Property<double>("Tva")
                        .HasColumnType("float")
                        .HasColumnName("TVA");

                    b.Property<bool>("Visibilite")
                        .HasColumnType("bit")
                        .HasColumnName("visibilite");

                    b.HasKey("Refe")
                        .HasName("PK_dbo.Produit");

                    b.ToTable("Produit");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Systeme", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adresse");

                    b.Property<string>("AdresseRetenu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("adresseRetenu");

                    b.Property<string>("CodeCategorie")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codeCategorie");

                    b.Property<string>("CodeTva")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("codeTVA");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("EtbSecondaire")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("etbSecondaire");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("fax");

                    b.Property<string>("MatriculeFiscale")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("matriculeFiscale");

                    b.Property<string>("NomSociete")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PourcentageFodec")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("pourcentageFodec");

                    b.Property<double>("PourcentageRetenu")
                        .HasColumnType("float")
                        .HasColumnName("pourcentageRetenu");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tel");

                    b.Property<decimal>("Timbre")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK_dbo.Systeme");

                    b.ToTable("Systeme");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Transaction", b =>
                {
                    b.Property<int>("NumBl")
                        .HasColumnType("int")
                        .HasColumnName("Num_BL");

                    b.Property<DateTime>("DateTr")
                        .HasColumnType("datetime")
                        .HasColumnName("date_tr");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("montant");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("NumBl")
                        .HasName("PK_dbo.Transaction");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Views.ProviderInvoiceView", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InvoicingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<long>("ProviderInvoiceNumber")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalHT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("ProviderInvoiceView");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Views.ReceiptNoteView", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLivraison")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdFournisseur")
                        .HasColumnType("int");

                    b.Property<int>("Num")
                        .HasColumnType("int");

                    b.Property<long>("NumBonFournisseur")
                        .HasColumnType("bigint");

                    b.Property<int?>("NumFactureFournisseur")
                        .HasColumnType("int");

                    b.Property<decimal>("TotHt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTTC")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("ReceiptNoteView");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.AvoirFinancierFournisseurs", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.FactureFournisseur", "NumNavigation")
                        .WithOne("AvoirFinancierFournisseurs")
                        .HasForeignKey("TunNetCom.SilkRoadErp.Sales.Domain.Entites.AvoirFinancierFournisseurs", "Num")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.AvoirFinancierFournisseurs_dbo.FactureFournisseur_Num");

                    b.Navigation("NumNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.AvoirFournisseur", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Fournisseur", "Fournisseur")
                        .WithMany("AvoirFournisseur")
                        .HasForeignKey("FournisseurId")
                        .HasConstraintName("FK_dbo.AvoirFournisseur_dbo.Fournisseur_fournisseurId");

                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.FactureAvoirFournisseur", "NumFactureAvoirFournisseurNavigation")
                        .WithMany("AvoirFournisseur")
                        .HasForeignKey("NumFactureAvoirFournisseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_dbo.AvoirFournisseur_dbo.FactureAvoirFournisseur_Num_FactureAvoirFournisseur");

                    b.Navigation("Fournisseur");

                    b.Navigation("NumFactureAvoirFournisseurNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Avoirs", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Client", "Client")
                        .WithMany("Avoirs")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_dbo.Avoirs_dbo.Client_clientId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.BonDeLivraison", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Client", "Client")
                        .WithMany("BonDeLivraison")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK_dbo.BonDeLivraison_dbo.Client_clientId");

                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Facture", "NumFactureNavigation")
                        .WithMany("BonDeLivraison")
                        .HasForeignKey("NumFacture")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_dbo.BonDeLivraison_dbo.Facture_Num_Facture");

                    b.Navigation("Client");

                    b.Navigation("NumFactureNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.BonDeReception", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Fournisseur", "IdFournisseurNavigation")
                        .WithMany("BonDeReception")
                        .HasForeignKey("IdFournisseur")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.BonDeReception_dbo.Fournisseur_id_fournisseur");

                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.FactureFournisseur", "NumFactureFournisseurNavigation")
                        .WithMany("BonDeReception")
                        .HasForeignKey("NumFactureFournisseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_dbo.BonDeReception_dbo.FactureFournisseur_Num_Facture_fournisseur");

                    b.Navigation("IdFournisseurNavigation");

                    b.Navigation("NumFactureFournisseurNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Commandes", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Fournisseur", "Fournisseur")
                        .WithMany("Commandes")
                        .HasForeignKey("FournisseurId")
                        .HasConstraintName("FK_dbo.Commandes_dbo.Fournisseur_fournisseurId");

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Devis", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Client", "IdClientNavigation")
                        .WithMany("Devis")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Devis_dbo.Client_id_client");

                    b.Navigation("IdClientNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.EcheanceDesFournisseurs", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Fournisseur", "Fournisseur")
                        .WithMany("EcheanceDesFournisseurs")
                        .HasForeignKey("FournisseurId")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.EcheanceDesFournisseurs_dbo.Fournisseur_fournisseur_id");

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Facture", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Client", "IdClientNavigation")
                        .WithMany("Facture")
                        .HasForeignKey("IdClient")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Facture_dbo.Client_id_client");

                    b.Navigation("IdClientNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.FactureAvoirFournisseur", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Fournisseur", "IdFournisseurNavigation")
                        .WithMany("FactureAvoirFournisseur")
                        .HasForeignKey("IdFournisseur")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.FactureAvoirFournisseur_dbo.Fournisseur_id_fournisseur");

                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.FactureFournisseur", "NumFactureFournisseurNavigation")
                        .WithMany("FactureAvoirFournisseur")
                        .HasForeignKey("NumFactureFournisseur")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_dbo.FactureAvoirFournisseur_dbo.FactureFournisseur_Num_FactureFournisseur");

                    b.Navigation("IdFournisseurNavigation");

                    b.Navigation("NumFactureFournisseurNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.FactureFournisseur", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Fournisseur", "IdFournisseurNavigation")
                        .WithMany("FactureFournisseur")
                        .HasForeignKey("IdFournisseur")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.FactureFournisseur_dbo.Fournisseur_id_fournisseur");

                    b.Navigation("IdFournisseurNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneAvoirFournisseur", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.AvoirFournisseur", "NumAvoirFrNavigation")
                        .WithMany("LigneAvoirFournisseur")
                        .HasForeignKey("NumAvoirFr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneAvoirFournisseur_dbo.AvoirFournisseur_Num_AvoirFr");

                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Produit", "RefProduitNavigation")
                        .WithMany("LigneAvoirFournisseur")
                        .HasForeignKey("RefProduit")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneAvoirFournisseur_dbo.Produit_Ref_Produit");

                    b.Navigation("NumAvoirFrNavigation");

                    b.Navigation("RefProduitNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneAvoirs", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Avoirs", "NumAvoirNavigation")
                        .WithMany("LigneAvoirs")
                        .HasForeignKey("NumAvoir")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneAvoirs_dbo.Avoirs_Num_avoir");

                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Produit", "RefProduitNavigation")
                        .WithMany("LigneAvoirs")
                        .HasForeignKey("RefProduit")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneAvoirs_dbo.Produit_Ref_Produit");

                    b.Navigation("NumAvoirNavigation");

                    b.Navigation("RefProduitNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneBl", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.BonDeLivraison", "NumBlNavigation")
                        .WithMany("LigneBl")
                        .HasForeignKey("NumBl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneBL_dbo.BonDeLivraison_Num_BL");

                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Produit", "RefProduitNavigation")
                        .WithMany("LigneBl")
                        .HasForeignKey("RefProduit")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneBL_dbo.Produit_Ref_Produit");

                    b.Navigation("NumBlNavigation");

                    b.Navigation("RefProduitNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneBonReception", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.BonDeReception", "NumBonRecNavigation")
                        .WithMany("LigneBonReception")
                        .HasForeignKey("NumBonRec")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneBonReception_dbo.BonDeReception_Num_BonRec");

                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Produit", "RefProduitNavigation")
                        .WithMany("LigneBonReception")
                        .HasForeignKey("RefProduit")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneBonReception_dbo.Produit_Ref_Produit");

                    b.Navigation("NumBonRecNavigation");

                    b.Navigation("RefProduitNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneCommandes", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Commandes", "NumCommandeNavigation")
                        .WithMany("LigneCommandes")
                        .HasForeignKey("NumCommande")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneCommandes_dbo.Commandes_Num_commande");

                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Produit", "RefProduitNavigation")
                        .WithMany("LigneCommandes")
                        .HasForeignKey("RefProduit")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneCommandes_dbo.Produit_Ref_Produit");

                    b.Navigation("NumCommandeNavigation");

                    b.Navigation("RefProduitNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.LigneDevis", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Devis", "NumDevisNavigation")
                        .WithMany("LigneDevis")
                        .HasForeignKey("NumDevis")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneDevis_dbo.Devis_Num_devis");

                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Produit", "RefProduitNavigation")
                        .WithMany("LigneDevis")
                        .HasForeignKey("RefProduit")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.LigneDevis_dbo.Produit_Ref_produit");

                    b.Navigation("NumDevisNavigation");

                    b.Navigation("RefProduitNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Transaction", b =>
                {
                    b.HasOne("TunNetCom.SilkRoadErp.Sales.Domain.Entites.BonDeLivraison", "NumBlNavigation")
                        .WithOne("Transaction")
                        .HasForeignKey("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Transaction", "NumBl")
                        .IsRequired()
                        .HasConstraintName("FK_dbo.Transaction_dbo.BonDeLivraison_Num_BL");

                    b.Navigation("NumBlNavigation");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.AvoirFournisseur", b =>
                {
                    b.Navigation("LigneAvoirFournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Avoirs", b =>
                {
                    b.Navigation("LigneAvoirs");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.BonDeLivraison", b =>
                {
                    b.Navigation("LigneBl");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.BonDeReception", b =>
                {
                    b.Navigation("LigneBonReception");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Client", b =>
                {
                    b.Navigation("Avoirs");

                    b.Navigation("BonDeLivraison");

                    b.Navigation("Devis");

                    b.Navigation("Facture");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Commandes", b =>
                {
                    b.Navigation("LigneCommandes");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Devis", b =>
                {
                    b.Navigation("LigneDevis");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Facture", b =>
                {
                    b.Navigation("BonDeLivraison");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.FactureAvoirFournisseur", b =>
                {
                    b.Navigation("AvoirFournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.FactureFournisseur", b =>
                {
                    b.Navigation("AvoirFinancierFournisseurs");

                    b.Navigation("BonDeReception");

                    b.Navigation("FactureAvoirFournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Fournisseur", b =>
                {
                    b.Navigation("AvoirFournisseur");

                    b.Navigation("BonDeReception");

                    b.Navigation("Commandes");

                    b.Navigation("EcheanceDesFournisseurs");

                    b.Navigation("FactureAvoirFournisseur");

                    b.Navigation("FactureFournisseur");
                });

            modelBuilder.Entity("TunNetCom.SilkRoadErp.Sales.Domain.Entites.Produit", b =>
                {
                    b.Navigation("LigneAvoirFournisseur");

                    b.Navigation("LigneAvoirs");

                    b.Navigation("LigneBl");

                    b.Navigation("LigneBonReception");

                    b.Navigation("LigneCommandes");

                    b.Navigation("LigneDevis");
                });
#pragma warning restore 612, 618
        }
    }
}
