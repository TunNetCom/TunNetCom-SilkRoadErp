// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable enable
using Microsoft.VisualBasic;
using System;
using System.Collections.Generic;

namespace TunNetCom.SilkRoadErp.Sales.Domain.Entites;

public partial class BonDeReception
{
    public void UpdateReceiptNote(
        int num,
        long numBonFournisseur,
        DateTime dateLivraison,
        int idFournisseur,
        DateTime date,
        int? numFactureFournisseur
        )
    {
          this.Num = num;
        this.NumBonFournisseur = numBonFournisseur;
        this.DateLivraison = dateLivraison;
        this.IdFournisseur = idFournisseur;
        this.Date = date;
        this.NumFactureFournisseur = NumFactureFournisseur;
        }

        public static BonDeReception CreateReceiptNote(
        int num,
        long numBonFournisseur,
        DateTime dateLivraison,
        int idFournisseur,
        DateTime date,
        int? numFactureFournisseur
        )
    {
        return new BonDeReception
        {
            Num = num,
            NumBonFournisseur = numBonFournisseur,
            DateLivraison = dateLivraison,
            IdFournisseur= idFournisseur,
            Date = date,
            NumFactureFournisseur= numFactureFournisseur
        };
    }
    public int Num { get; set; }

    public long NumBonFournisseur { get; set; }

    public DateTime DateLivraison { get; set; }

    public int IdFournisseur { get; set; }

    public DateTime Date { get; set; }

    public int? NumFactureFournisseur { get; set; }

    [System.ComponentModel.DataAnnotations.Schema.NotMapped]
    public decimal TotTtc
    {
        get
        {
            decimal total = 0;
            foreach (var ligne in LigneBonReception)
            {
                total += ligne.TotTtc;
            }
            return total;
        }
    }

    [System.ComponentModel.DataAnnotations.Schema.NotMapped]
    public decimal TotHt
    {
        get
        {
            decimal total = 0;
            foreach (var ligne in LigneBonReception)
            {
                total += ligne.TotHt;
            }
            return total;
        }
    }

    [System.ComponentModel.DataAnnotations.Schema.NotMapped]
    public decimal TotTva
    {
        get
        {
            decimal total = 0;
            foreach (var ligne in LigneBonReception)
            {
                total += ligne.TotTtc - ligne.TotHt;
            }
            return total;
        }
    }

    public virtual Fournisseur IdFournisseurNavigation { get; set; } = null!;

    public virtual ICollection<LigneBonReception> LigneBonReception { get; set; } = new List<LigneBonReception>();

    public virtual FactureFournisseur? NumFactureFournisseurNavigation { get; set; }
}