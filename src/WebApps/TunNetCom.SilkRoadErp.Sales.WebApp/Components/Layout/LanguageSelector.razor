@using Microsoft.Extensions.Localization
@using System.Globalization
@using TunNetCom.SilkRoadErp.Sales.WebApp.Locales
@inject NavigationManager Navigation
@inject IStringLocalizer<SharedResource> Localizer
@inject IJSRuntime JSRuntime

<RadzenDropDown @bind-Value="SelectedCulture" 
                Data="@LanguageOptions" 
                TextProperty="DisplayName" 
                ValueProperty="Code" 
                Style="width: 150px"
                Change="@OnCultureChanged">
</RadzenDropDown>

@code {
    private List<LanguageOption> LanguageOptions = new List<LanguageOption>
    {
        new LanguageOption { Code = "en", DisplayName = "English" },
        new LanguageOption { Code = "fr", DisplayName = "Français" },
        new LanguageOption { Code = "ar", DisplayName = "العربية" }
    };

    private string SelectedCulture { get; set; }

    protected override void OnInitialized()
    {
        SelectedCulture = CultureInfo.CurrentCulture.Name;
    }

    private void OnCultureChanged()
    {
        var selectedCulture = new CultureInfo(SelectedCulture);
        if (CultureInfo.CurrentCulture != selectedCulture)
        {
            var uri = new Uri(Navigation.Uri).GetComponents(UriComponents.PathAndQuery, UriFormat.Unescaped);
            var cultureEscaped = Uri.EscapeDataString(selectedCulture.Name);
            var uriEscaped = Uri.EscapeDataString(uri);

            Navigation.NavigateTo($"Culture/Set?culture={cultureEscaped}&redirectUri={uriEscaped}", forceLoad: true);
        }
    }

    public class LanguageOption
    {
        public string Code { get; set; } = string.Empty;
        public string DisplayName { get; set; } = string.Empty;
    }
}